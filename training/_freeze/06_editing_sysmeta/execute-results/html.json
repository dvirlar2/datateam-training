{
  "hash": "3f83c0162626aeeb565b709e636a27c2",
  "result": {
    "markdown": "---\ntitle: \"Editing system metadata\"\nfreeze: true\n---\n\n\nEvery object on the ADC (or the KNB) has \"system metadata\". An object's system metadata have information about the file itself, such as the name of the file (`fileName`), the format (`formatId`), who the `rightsHolder` is, what the `accessPolicy` is, and more. Sometimes we will need to edit system metadata in order to make sure that things on the webpage display correctly, or to ensure a file downloads from the website with the correct file name and extension.\n\nAlthough the majority of system metadata changes that need to be made are done automatically, sometimes we need to change aspects of the system metadata (or 'sysmeta' for short) manually.\n\n## Edit sysmeta\n\nTo edit the sysmeta of an object (data file, EML, or resource map, etc.) with a `PID`, first load the sysmeta into R using the following command:\n\n::: {.cell}\n\n```{.r .cell-code}\nsysmeta <- getSystemMetadata(d1c@mn, pid)\n```\n:::\n\nThen edit the sysmeta slots by using `@` functionality. For example, to change the `fileName` use the following command:\n\n::: {.cell}\n\n```{.r .cell-code}\nsysmeta@fileName <- 'NewFileName.csv'\n```\n:::\n\nNote that some slots cannot be changed by simple text replace (particularly the `accessPolicy`). There are various helper functions for changing the `accessPolicy` and `rightsHolder` such as `datapack::addAccessRule()` (which takes the sysmeta as an input) or <a href = 'https://nceas.github.io/datateam-training/reference/set-rights-and-access.html#set-rights-and-access' target='_blank'>`arcticdatautils::set_rights_and_access()`</a>, which only requires a `PID`. In general, you most frequently need to use `dataone::getSystemMetadata()` to change either the `formatId` or `fileName` slots (see <a href = 'https://cn.dataone.org/cn/v2/formats' target='_blank'>the DataONE list of format ids</a>) for acceptable formats.\n\n::: {.cell}\n\n```{.r .cell-code}\n# Example of setting the formatId slot\nsysmeta@formatId <- \"eml://ecoinformatics.org/eml-2.1.1\"\n```\n:::\n\nAfter you have changed the necessary slot, you can update the system metadata using the following command:\n\n::: {.cell}\n\n```{.r .cell-code}\nupdateSystemMetadata(d1c@mn, pid, sysmeta)\n```\n:::\n\n### Identifiers and sysmeta\n\nImportantly, changing the system metadata does NOT necessitate a change in the `PID` of an object. This is because changes to the system metadata do not change the object itself, they are only changing the description of the object (although ideally the system metadata are accurate when an object is first published). \n\n### Additional resources\n\nFor a more in-depth (and technical) guide to sysmeta, check out the DataONE documentation: \n\n- <a href = 'https://releases.dataone.org/online/api-documentation-v2.0.1/design/SystemMetadata.html' target='_blank'>System Metadata</a>\n- <a href = 'https://releases.dataone.org/online/api-documentation-v2.0.1/apis/Types2.html' target='_blank'>Data Types in CICore</a>\n\n\n\n\n## Exercise 5 {.exercise}\n\nSometimes the system doesn't recognize the file types properly. For example you have a csv file but the File type on the website says `Microsoft Excel` \n\n* Read the system metadata in from the data file you uploaded [previously](#exercise-4).\n* Check to make sure the `fileName` and `formatId` are set correctly (the extension in `fileName` should match the `formatId`).\n* Update the system metadata if necessary.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}