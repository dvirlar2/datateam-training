## Convert Excel file to CSV
This uses the workflow in here: https://readxl.tidyverse.org/articles/articles/readxl-workflows.html

This is preferred to converting Excel files by hand to avoid human error.

```{block, type = "note"}
If files are in the visitor folder you might need to be complete the following while logged into visitor
```

Load the necessary packages
```{r, eval=F}
library(magrittr)
library(readxl)
library(readr)
```

Get a list of files that we want to convert
```{r, eval=F}
xlsx <- dir("directory/of/files/here", pattern = "*xls", recursive = T, full.names = T)
```

Create a function that iterates through the excel files and saves it as a csv in the same folder the excel file was in
```{r, eval=F}
read_then_csv <- function(sheet, path) {
  #remove the file extension
  pathbase <- path %>%
    tools::file_path_sans_ext()
  
  #change file extension to csv and save with the sheet name
  for(i in 1:length(sheet)){
    path %>%
      read_excel(sheet = i) %>%
      write_csv(paste0(pathbase, "_", sheet[i], ".csv")) 
  }
  
}
```

Get the sheet name(s)
```{r, eval=F}
sheets <- xlsx %>%
  map(excel_sheets) %>%
  set_names()
```

Iterate over all the xlsx files for each of the sheets
```{r, eval=F}
df <- map2(sheets, xlsx, ~read_then_csv(.x, path = .y))
```

Check the files afterwards to make sure everything was converted properly
```{r, eval=F}
csv <- dir("directory/of/files/here", pattern = "*csv", recursive = T, full.names = T)
```

Check to see if there are any empty tables and get a list of files that were empty
```{r, eval=F}
files <- map(csv, read_csv)
n <- which(map(files, nrow) == 0)
```

Remove those empty table files
```{r, eval=F}
lapply(csv[n], file.remove)
```

Remove xlsx files if everything looks in order
```{r, eval=F}
lapply(xlsx, file.remove)
```
