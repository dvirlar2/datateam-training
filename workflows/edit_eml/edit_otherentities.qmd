## Edit otherEntities

### Remove otherEntities

To remove an `otherEntity` use the following command. This may be useful if a data object is originally listed as an `otherEntity` and then transferred to a `dataTable`.

```{r, eval = FALSE}
doc$dataset$otherEntity[[i]] <- NULL
```

### Create otherEntities

If you need to create/update an `otherEntity`, make sure to <a href = 'https://nceas.github.io/datateam-training/reference/publish-an-object.html#publish-an-object' target='_blank'>publish</a> or <a href = 'https://nceas.github.io/datateam-training/reference/edit-otherentities.html#update-a-data-file' target='_blank'>update</a> your data object first (if it is not already on the DataONE MN). Then build your `otherEntity`.

```{r, eval = FALSE}
otherEntity <- arcticdatautils::pid_to_eml_entity(mn, pkg$data[[i]])
```

Alternatively, you can build the `otherEntity` of a data object not in your package by simply inputting the data `PID`.

```{r, eval = FALSE}
otherEntity <- arcticdatautils::pid_to_eml_entity(mn, "your_data_pid", entityType = "otherEntity", entityName = "Entity Name", entityDescription = "Description about entity")
```

The `otherEntity` must then be set to the EML, like so: 

```{r, eval = FALSE}
doc$dataset$otherEntity <- otherEntity
```

If you have more than one `otherEntity` object in the EML already, you can add the new one like this:

```{r, eval = FALSE}
doc$dataset$otherEntity[[i]] <- otherEntity
```

Where `i` is set to the number of existing entities plus one. Remember the warning from the last section, however. If you only have one `otherEntity`, and you are trying to add another, you have to run:

```{r, eval = FALSE}
doc$dataset$otherEntity <- list(otherEntity, doc$dataset$otherEntity)
```

